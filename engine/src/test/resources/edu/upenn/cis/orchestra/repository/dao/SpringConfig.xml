<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>	
	
	<!-- Data source bean -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName"><value>com.mysql.jdbc.Driver</value></property>
		<property name="url"><value>jdbc:mysql://localhost/orchestraRepos</value></property>
		<property name="username"><value>un</value></property>
		<property name="password"><value>pw</value></property>
	    <property name="maxActive"><value>5</value></property>
	    <property name="maxIdle"><value>2</value></property>
  	</bean> 

	<!-- Transaction manager, for IBATIS we can use a basic connection transaction manager (JDBC) -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource"><ref local="dataSource"/></property>
	</bean>

	<!-- SqlMap setup for iBATIS Database Layer -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation"><value>edu/upenn/cis/orchestra/repository/dao/ibatis/SqlMapConfig.XML</value></property>
	</bean>
	
	<!-- Bean used to communicate with the repository database via IBATIS 
	     This is named target because a declarative transaction layer will be added (see below)
    -->	     
	<bean id="ibatisReposSchemDAOTarget" class="edu.upenn.cis.orchestra.repository.dao.ibatis.IbatisRepositorySchemaDAO">
		<property name="dataSource"><ref local="dataSource"/></property>
		<property name="sqlMapClient"><ref local="sqlMapClient"/></property>
	</bean>
	
	<bean id="ibatisReposSchemDAO" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref bean="transactionManager"/>
		</property>
		<property name="target">
			<ref bean="ibatisReposSchemDAOTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="add*, remove*">
					PROPAGATION_REQUIRED, ISOLATION_READ_COMMITTED
				</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- Bean used by the web service to select a DAO -->
	<!-- Remove comments to choose between RDBMS DAO and flat file DAO -->
	
	<!-- Use RDBMS DAO -->
	<alias name="ibatisReposSchemDAO" alias="webServiceDAO"/>
	
	<!-- Flat file DAO -->
	<!--
	<bean id="webServiceDAO" class="edu.upenn.cis.orchestra.repository.dao.flatfile.FlatFileRepositoryDAO">
		<constructor-arg type="java.lang.String">
				<value>classpath:edu/upenn/cis/orchestra/repository/dao/flatfile/catalExample.txt</value>
		</constructor-arg>
	</bean>
	-->
	
</beans>
 