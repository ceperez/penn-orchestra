CONNECT TO BIOTB2 USER DB2ADMIN USING greg2db2;

CREATE SCHEMA PLASMO;

CREATE TABLE PLASMO.GENEFEAT
(
	SRC_ID  VARCHAR(50) NOT NULL, 
	PRODUCT VARCHAR(4000), 
	REFSEQ_ACC VARCHAR(100), 	
	CONSTRAINT GENEFEAT_PK PRIMARY KEY (SRC_ID)
);

CREATE TABLE PLASMO.REFSEQ
(
  GI INTEGER NOT NULL,
  ACC VARCHAR(100),
  SEQ VARCHAR (500),
  PL  DOUBLE,
  DEPRECATED VARCHAR(3),
  CONSTRAINT REFSEQ_PK PRIMARY KEY (GI)
);

CREATE TABLE PLASMO.GENETAX 
(
 SRC_ID VARCHAR(50) NOT NULL,
 TAX_ID  INTEGER NOT NULL,
 CONSTRAINT GENETAX_PK PRIMARY KEY (SRC_ID, TAX_ID) 
);

CREATE TABLE PLASMO.TAXNAMES
(
 TAX_ID  INTEGER NOT NULL, 
 TAX_NAME VARCHAR(255) NOT NULL, 
 NAME_CLASS VARCHAR(300) NOT NULL,
 CONSTRAINT TAXNAMES_PK PRIMARY KEY (TAX_ID, TAX_NAME, NAME_CLASS) 
);
 
	
CREATE TABLE PLASMO.DOMAIN_REF
(
  SRC_ID  VARCHAR(50) NOT NULL, 
  DB VARCHAR(80) NOT NULL, 
  DBACC VARCHAR(100)  NOT NULL,
  CONSTRAINT DOMAIN_REF_PK PRIMARY KEY (SRC_ID, DB, DBACC)
);


CREATE TABLE PLASMO.GOTERM_SUMMARY
(
 SRC_ID  VARCHAR(50) NOT NULL, 
 GO_ID VARCHAR(32) NOT NULL,
 SOURCE VARCHAR(80),
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (SRC_ID, GO_ID)
);

CREATE TABLE PLASMO.GOTERM
(
 GO_ID VARCHAR(32) NOT NULL, 
 GO_NAME VARCHAR(255), 
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (GO_ID)
);



CREATE TABLE PLASMO.GENEFEAT_L
(
	SRC_ID  VARCHAR(50) NOT NULL, 
	PRODUCT VARCHAR(4000), 
	REFSEQ_ACC VARCHAR(100), 
	CONSTRAINT GENEFEAT_PK PRIMARY KEY (SRC_ID)
);

CREATE TABLE PLASMO.GENEFEAT_R
(
	SRC_ID  VARCHAR(50) NOT NULL, 
	PRODUCT VARCHAR(4000), 
	REFSEQ_ACC VARCHAR(100), 
	CONSTRAINT GENEFEAT_PK PRIMARY KEY (SRC_ID)
);

CREATE TABLE PLASMO.REFSEQ_L
(
  GI INTEGER NOT NULL,
  ACC VARCHAR(100),
  SEQ VARCHAR (500),
  PL  DOUBLE,
  DEPRECATED VARCHAR(3),
  CONSTRAINT REFSEQ_PK PRIMARY KEY (GI)
);

CREATE TABLE PLASMO.REFSEQ_R
(
  GI INTEGER NOT NULL,
  ACC VARCHAR(100),
  SEQ VARCHAR (500),
  PL  DOUBLE,
  DEPRECATED VARCHAR(3),
  CONSTRAINT REFSEQ_PK PRIMARY KEY (GI)
);

CREATE TABLE PLASMO.GENETAX_L
(
 SRC_ID VARCHAR(50) NOT NULL,
 TAX_ID  INTEGER NOT NULL, 
 CONSTRAINT GENETAX_PK PRIMARY KEY (SRC_ID, TAX_ID) 
);

CREATE TABLE PLASMO.GENETAX_R
(
 SRC_ID VARCHAR(50) NOT NULL,
 TAX_ID  INTEGER NOT NULL, 
 CONSTRAINT GENETAX_PK PRIMARY KEY (SRC_ID, TAX_ID) 
);

CREATE TABLE PLASMO.TAXNAMES_L
(
 TAX_ID  INTEGER NOT NULL, 
 TAX_NAME VARCHAR(255) NOT NULL, 
 NAME_CLASS VARCHAR(300) NOT NULL,
 CONSTRAINT TAXNAMES_PK PRIMARY KEY (TAX_ID, TAX_NAME, NAME_CLASS) 
);

CREATE TABLE PLASMO.TAXNAMES_R
(
 TAX_ID  INTEGER NOT NULL, 
 TAX_NAME VARCHAR(255) NOT NULL, 
 NAME_CLASS VARCHAR(300) NOT NULL,
 CONSTRAINT TAXNAMES_PK PRIMARY KEY (TAX_ID, TAX_NAME, NAME_CLASS) 
);



CREATE TABLE PLASMO.DOMAIN_REF_L
(
  SRC_ID  VARCHAR(50) NOT NULL, 
  DB VARCHAR(80) NOT NULL, 
  DBACC VARCHAR(100)  NOT NULL,
  CONSTRAINT DOMAIN_REF_PK PRIMARY KEY (SRC_ID, DB, DBACC)
);

CREATE TABLE PLASMO.DOMAIN_REF_R
(
  SRC_ID  VARCHAR(50) NOT NULL, 
  DB VARCHAR(80) NOT NULL, 
  DBACC VARCHAR(100)  NOT NULL,
  CONSTRAINT DOMAIN_REF_PK PRIMARY KEY (SRC_ID, DB, DBACC)
);


CREATE TABLE PLASMO.GOTERM_SUMMARY_L
(
 SRC_ID  VARCHAR(50) NOT NULL, 
 GO_ID VARCHAR(32) NOT NULL, 
 SOURCE VARCHAR(80),
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (SRC_ID, GO_ID)
);


CREATE TABLE PLASMO.GOTERM_SUMMARY_R
(
 SRC_ID  VARCHAR(50) NOT NULL, 
 GO_ID VARCHAR(32) NOT NULL, 
 SOURCE VARCHAR(80),
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (SRC_ID, GO_ID)
);


CREATE TABLE PLASMO.GOTERM_L
(
 GO_ID VARCHAR(32) NOT NULL, 
 GO_NAME VARCHAR(255), 
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (GO_ID)
);

CREATE TABLE PLASMO.GOTERM_R
(
 GO_ID VARCHAR(32) NOT NULL, 
 GO_NAME VARCHAR(255), 
 CONSTRAINT GOTERM_SUMMARY_PK PRIMARY KEY (GO_ID)
);


/* Schema REFSEQ */

CREATE SCHEMA REFSEQ;

CREATE TABLE REFSEQ.CATALOG 
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);

CREATE TABLE REFSEQ.SPECIES 
(
   TAX_ID INTEGER NOT NULL,
   SPECIES VARCHAR(300),
   CONSTRAINT SPECIES_PK PRIMARY KEY (TAX_ID)
);

CREATE TABLE REFSEQ.RMVRECORDS  
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   REPLACEDBY INTEGER,
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);

CREATE TABLE REFSEQ.CATALOG_L
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);
 
CREATE TABLE REFSEQ.CATALOG_R
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);


CREATE TABLE REFSEQ.RMVRECORDS_L  
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   REPLACEDBY INTEGER,
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);

CREATE TABLE REFSEQ.RMVRECORDS_R
(
   GI INTEGER NOT NULL,
   ACC VARCHAR(40),
   TAX_ID INTEGER,
   SEQ VARCHAR(500),
   REPLACEDBY INTEGER,
   CONSTRAINT CATALOG_PK PRIMARY KEY (GI)
);


CREATE TABLE REFSEQ.SPECIES_L
(
   TAX_ID INTEGER NOT NULL,
   SPECIES VARCHAR(300),
   CONSTRAINT SPECIES_PK PRIMARY KEY (TAX_ID)
);

CREATE TABLE REFSEQ.SPECIES_R
(
   TAX_ID INTEGER NOT NULL,
   SPECIES VARCHAR(300),
   CONSTRAINT SPECIES_PK PRIMARY KEY (TAX_ID)
);

/** Schema TAXONOMY */
CREATE SCHEMA TAXO;

CREATE TABLE TAXO.NAMES 
(
   TAX_ID INTEGER NOT NULL,
   NAME VARCHAR(500) NOT NULL,
   NAME_CLASS VARCHAR(300) NOT NULL,
   CONSTRAINT CST_NAMES_PK PRIMARY KEY (TAX_ID, NAME, NAME_CLASS)
);

CREATE TABLE TAXO.NAMES_L 
(
   TAX_ID INTEGER NOT NULL,
   NAME VARCHAR(500) NOT NULL,
   NAME_CLASS VARCHAR(300) NOT NULL,
   CONSTRAINT CST_NAMES_PK PRIMARY KEY (TAX_ID, NAME, NAME_CLASS)
);

CREATE TABLE TAXO.NAMES_R
(
   TAX_ID INTEGER NOT NULL,
   NAME VARCHAR(500) NOT NULL,
   NAME_CLASS VARCHAR(300) NOT NULL,
   CONSTRAINT CST_NAMES_PK PRIMARY KEY (TAX_ID, NAME, NAME_CLASS)
);
CREATE SCHEMA INTERPRO;

CREATE TABLE INTERPRO.ENTRY 
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     NAME VARCHAR(100),
     CONSTRAINT ENTRY_PK PRIMARY KEY (ENTRY_AC)
     );
     

CREATE TABLE INTERPRO.ENTRY2METH 
   (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     METHOD_AC VARCHAR(25) NOT NULL,
     DB VARCHAR(20) NOT NULL,
     CONSTRAINT ENTRY2METH_PK PRIMARY KEY (ENTRY_AC, DB, METHOD_AC)
    );
    
CREATE TABLE INTERPRO.INTERPRO2GO 
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     GO_AC    VARCHAR(10) NOT NULL,
     CONSTRAINT INTERPRO2GO_PK PRIMARY KEY (ENTRY_AC, GO_AC)
    );
    
    
CREATE TABLE INTERPRO.ENTRY_L
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     NAME VARCHAR(100),
     CONSTRAINT ENTRY_PK PRIMARY KEY (ENTRY_AC)
     );     
     
CREATE TABLE INTERPRO.ENTRY_R
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     NAME VARCHAR(100),
     CONSTRAINT ENTRY_PK PRIMARY KEY (ENTRY_AC)
     );          
     
CREATE TABLE INTERPRO.ENTRY2METH_L
   (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     METHOD_AC VARCHAR(25) NOT NULL,
     DB VARCHAR(20) NOT NULL,
     CONSTRAINT ENTRY2METH_PK PRIMARY KEY (ENTRY_AC, DB, METHOD_AC)
    ); 
    
CREATE TABLE INTERPRO.ENTRY2METH_R
   (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     METHOD_AC VARCHAR(25) NOT NULL,
     DB VARCHAR(20) NOT NULL,
     CONSTRAINT ENTRY2METH_PK PRIMARY KEY (ENTRY_AC, DB, METHOD_AC)
    );    
    
CREATE TABLE INTERPRO.INTERPRO2GO_L 
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     GO_AC    VARCHAR(10) NOT NULL,
     CONSTRAINT INTERPRO2GO_PK PRIMARY KEY (ENTRY_AC, GO_AC)
    );       
    
CREATE TABLE INTERPRO.INTERPRO2GO_R
    (
     ENTRY_AC VARCHAR(9) NOT NULL, 
     GO_AC    VARCHAR(10) NOT NULL,
     CONSTRAINT INTERPRO2GO_PK PRIMARY KEY (ENTRY_AC, GO_AC)
    );    
CREATE SCHEMA GO;

CREATE TABLE GO.TERM 
(
  ID INTEGER NOT NULL,
  NAME VARCHAR(255),
  ACC VARCHAR(255),
  CONSTRAINT TERM_PK PRIMARY KEY (ID)
);

CREATE TABLE GO.TERM_L
(
  ID INTEGER NOT NULL,
  NAME VARCHAR(255),
  ACC VARCHAR(255),
  CONSTRAINT TERM_PK PRIMARY KEY (ID)
);

CREATE TABLE GO.TERM_R
(
  ID INTEGER NOT NULL,
  NAME VARCHAR(255),
  ACC VARCHAR(255),
  CONSTRAINT TERM_PK PRIMARY KEY (ID)
);
COMMIT WORK;
DISCONNECT ALL;
